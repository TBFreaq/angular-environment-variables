trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Pipeline variables
  # These should match the output folders in dist
  PIPELINE_RUNTIME_HOST_DIST_DIR: 'runtime-host'
  PIPELINE_CLIENT_DIR: 'angular-environment-variables/browser'
  PIPELINE_BICEP_DROP_NAME: 'drop-bicep'
  PIPELINE_APP_DROP_NAME: 'drop-app'
  RESOURCE_GROUP_NAME: '<YOUR-RG-NAME>'
  RESOURCE_GROUP_ENV: 'production'
  # Variables used for the environment configuration set by bicep
  # Ideally you want to have these in a variable group instead
  APP_ANGULAR_ENVIRONMENT: 'production'
  APP_API_URL: 'https://random.dog'
  APP_BACKGROUND_COLOR: 'lime'

stages:
  - stage: Build
    displayName: Build App
    jobs:
      - job: WebApp
        displayName: Build WebApp
        steps:
          - checkout: self
            clean: 'true'
            fetchDepth: 0

          - task: NodeTool@0
            displayName: Ensure Node is installed
            inputs:
              versionSource: 'spec'
              versionSpec: '18.x'

          # Check, if our bicep file is valid (optional, might still fail in deployment phase)
          - script: az bicep build --file ./.bicep/main.bicep
            displayName: Bicep build

          # Install packages
          - task: Npm@1
            displayName: Install dependencies
            inputs:
              command: 'ci'

          # Build Runtime Host and client
          - task: Npm@1
            displayName: Build applications
            inputs:
              command: 'custom'
              customCommand: 'run ci:build'

          # Copy bicep file
          - task: CopyFiles@2
            displayName: Copy Bicep files
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/.bicep'
              Contents: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/bicep'

          # Copy Runtime Host
          - task: CopyFiles@2
            displayName: Copy Runtime Host files
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/dist/apps/$(PIPELINE_RUNTIME_HOST_DIST_DIR)'
              Contents: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/app'

          # Copy client to sub-folder of Runtime Host
          - task: CopyFiles@2
            displayName: Copy client
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/dist/apps/$(PIPELINE_CLIENT_DIR)'
              Contents: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/app/client'

          - task: PublishBuildArtifacts@1
            displayName: Publish bicep drop
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/bicep'
              ArtifactName: $(PIPELINE_BICEP_DROP_NAME)
              publishLocation: 'Container'

          - task: PublishBuildArtifacts@1
            displayName: Publish app drop
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/app'
              ArtifactName: $(PIPELINE_APP_DROP_NAME)
              publishLocation: 'Container'

  - stage: deploy
    displayName: Deploy WebApp
    dependsOn: Build
    jobs:
      - deployment: deploy
        displayName: Deploy WebApp
        environment: angular-environment-variables
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  displayName: Download artifacts

                - task: AzureCLI@2
                  displayName: Run Bicep
                  inputs:
                    azureSubscription: '<YOUR-SUBSCRIPTION>'
                    scriptType: 'pscore'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      az deployment group create `
                          --resource-group $Env:RESOURCE_GROUP_NAME `
                          --name "DeployApp" `
                          --template-file "$Env:PIPELINE_WORKSPACE/$Env:PIPELINE_BICEP_DROP_NAME/main.bicep" `
                          --parameters envName="$Env:RESOURCE_GROUP_ENV" `
                          angularEnvironment="$Env:APP_ANGULAR_ENVIRONMENT" `
                          appApiUrl="$Env:APP_API_URL" `
                          appBackgroundColor="$Env:APP_BACKGROUND_COLOR"

                - task: AzureWebApp@1
                  displayName: Deploy WebApp
                  inputs:
                    azureSubscription: '<YOUR-SUBSCRIPTION>'
                    appType: 'webAppLinux'
                    appName: 'app-angular-environment-variables-$(RESOURCE_GROUP_ENV)'
                    package: '$(Pipeline.Workspace)/$(PIPELINE_APP_DROP_NAME)'
